'use strict';

const keys = {
  linksKeys: [
    'id',
    'id_user',
    'link_type',
    'link_url',
    'timestamp_created',
  ],
  causesKeys: [
    'id',
    'cause',
  ],
  skillsKeys: [
    'id',
    'skill',
  ],
  usersKeysInsert: [
    'id',
    'password',
    'username',
    'user_type',
    'location_city',
    'location_state',
    'location_country',
    'bio',
    'first_name',
    'last_name',
    'logo',
    'organization',
    'availability',
  ],
  usersKeysRaw: [
    'id',
    'timestamp_created',
    'username',
    'user_type',
    'location_city',
    'location_state',
    'location_country',
    'bio',
    'first_name',
    'last_name',
    'logo',
    'organization',
    'availability',
  ],
  usersKeys: [
    'id',
    'timestamp_created as timestampCreated',
    'username',
    'user_type as userType',
    'location_city as locationCity',
    'location_state as locationState',
    'location_country as locationCountry',
    'bio',
    'first_name as firstName',
    'last_name as lastName',
    'logo',
    'organization',
    'availability',
  ],
  usersKeysAppendToOpportunityRaw: [
    // this is a select of table opportunities, but ONLY getting user info to hydrate into opportunity
    // will be pushed into nested array as follows:
    // fields on this list will drop leading 'users.'
    // array will be split on ' as '
    // fields starting with 'users_' will be pushed, dropping 'user_'
    'users.username',
    'users.user_type',
    'users.location_city as users_location_city',
    'users.location_state as users_location_state',
    'users.location_country as users_location_country',
    'users.bio',
    'users.first_name',
    'users.last_name',
    'users.logo',
    'users.organization',
    'users.availability as users_availability', // prevent keyword fault
  ],
  usersKeysAppendToOpportunity: [
    // this is a select of table opportunities, but ONLY getting user info to hydrate into opportunity
    'users.username',
    'users.user_type as userType',
    'users.location_city as locationCity',
    'users.location_state as locationState',
    'users.location_country as locationCountry',
    'users.bio',
    'users.first_name as firstName',
    'users.last_name as lastName',
    'users.logo',
    'users.organization',
    'users.availability',
  ],
  rolesKeysReturning: [
    'id',
    'id_user_adding as idUserAdding',
    'id_user_receiving as idUserReceiving',
    'capabilities'
  ],
  rolesKeys: [
    'roles.id as id',
    'id_user_adding as idUserAdding',
    'id_user_receiving as idUserReceiving',
    'users.first_name as firstName',
    'users.last_name as lastName',
    'users.logo',
    'users.location_city as locationCity',
    'users.location_state as locationState',
    'users.organization',
    'capabilities'
  ],
  rolesKeysRawInsert: [
    'capabilities',
    'id_user_adding',
    'id_user_receiving',
    'organization',
  ],
  rolesKeysRaw: {
    capabilities: null,
    id: null,
    id_user_adding: 'idUserAdding',
    idUserAdding: 'id_user_adding',
    id_user_receiving: 'idUserReceiving',
    idUserReceiving: 'id_user_receiving',
    organization: null
  },
  opportunitiesKeysRawInsert: [
    'id',
    'id_user',
    'opportunity_type',
    'offer',
    'title',
    'logo',
    'narrative',
    'timestamp_start',
    'timestamp_end',
    'location_city',
    'location_state',
    'location_country',
    'link'
  ],
  opportunitiesKeysRawCC: [
    'idUser',
    'opportunityType',
    'offer',
    'title',
    'logo',
    'narrative',
    'timestampStart',
    'timestampEnd',
    'locationCity',
    'locationState',
    'locationCountry',
    'link'
  ],
  opportunitiesKeysRaw: [
    'id',
    'opportunity_type',
    'offer',
    'title',
    'narrative',
    'timestamp_start',
    'timestamp_end',
    'location_city',
    'location_state',
    'location_country',
    'link'
  ],
  opportunitiesKeys: [
    'id',
    'opportunity_type as opportunityType',
    'offer',
    'title',
    'narrative',
    'timestamp_start as timestampStart',
    'timestamp_end as timestampEnd',
    'location_city as locationCity',
    'location_state as locationState',
    'location_country as locationCountry',
    'link'
  ],
  opportunitiesUsersKeys: [
    'opportunities.id',
    'id_user as idUser',
    'opportunity_type as opportunityType',
    'offer',
    'title',
    'narrative',
    'timestamp_start as timestampStart',
    'timestamp_end as timestampEnd',
    'users.user_type as userType',
    'users.first_name as firstName',
    'users.last_name as lastName',
    'users.logo',
    'users.organization',
    'users.location_city as userLocationCity',
    'users.location_state as userLocationState',
    'users.location_country as userLocationCountry',
    'opportunities.location_city as locationCity',
    'opportunities.location_state as locationState',
    'opportunities.location_country as locationCountry',
    'link'
  ],
  responseKeysRawCC: [
    'id',
    'idOpportunity',
    'idUser',
    'notes',
    'responseStatus',
    'timestampStatusChange',
  ],
  responseKeysRawInsert: [
    'id',
    'id_opportunity',
    'id_user',
    'notes',
    'response_status',
    'timestamp_status_change',
  ],
  responsesUsersKeysRaw: [
    'responses.id as id',
    'id_user',
    'id_opportunity',
    'response_status',
    'timestamp_status_change',
    'responses.timestamp_created',
    'notes',
    'users.first_name',
    'users.last_name',
    'users.organization',
  ],
  responsesUsersKeys: [
    'responses.id as id',
    'id_user as idUser',
    'id_opportunity as idOpportunity',
    'response_status as responseStatus',
    'timestamp_status_change as timestampStatusChange',
    'responses.timestamp_created as timestampCreated',
    'notes',
    'users.first_name as firstName',
    'users.last_name as lastName',
    'users.organization'
  ],
  responsesOpportunitiesKeys: [
    'responses.id',
    'responses.id_user as idUser',
    'responses.id_opportunity as idOpportunity',
    'notes',
    'response_status as responseStatus',
    'responses.timestamp_status_change as timestampStatusChange',
    'responses.timestamp_created as timestampCreated',
    'opportunities.narrative',
    'opportunities.title',
    'opportunities.offer',
    'opportunities.opportunity_type as opportunityType',
    'opportunities.link',
    'opportunities.location_city as locationCity',
    'opportunities.location_state as locationState',
    'opportunities.location_country as locationCountry',
    'opportunities.timestamp_start as timestampStart',
    'opportunities.timestamp_end as timestampEnd'
  ],
  
  snakeToCC: {
    user_type: 'userType',
    location_city: 'locationCity',
    location_state: 'locationState',
    location_country: 'locationCountry',
    first_name: 'firstName',
    last_name: 'lastName',
    opportunity_type: 'opportunityType',
    id_user: 'idUser',
    id_cause: 'idCause',
    id_opportunity: 'idOpportunity',
    id_skill: 'idSkill',
    id_user_adding: 'idUserAdding',
    id_user_receiving: 'idUserReceiving',
    link_type: 'linkType',
    link_url: 'linkUrl',
    response_status: 'responseStatus',
    timestamp_created: 'timestampCreated',
    timestamp_start: 'timestampStart',
    timestamp_end: 'timestampEnd',
    timestamp_status_change: 'timestampStatusChange'
  },
  ccToSnake: {
    userType: 'user_type',
    locationCity: 'location_city',
    locationState: 'location_state',
    locationCountry: 'location_country',
    firstName: 'first_name',
    lastName: 'last_name',
    opportunityType: 'opportunity_type',
    idUser: 'id_user',
    idCause: 'id_cause',
    idOpportunity: 'id_opportunity',
    idSkill: 'id_skill',
    idUserAdding: 'id_user_adding',
    idUserReceiving: 'id_user_receiving',
    linkType: 'link_type',
    linkUrl: 'link_url',
    responseStatus: 'response_status',
    timestampCreated: 'timestamp_created',
    timestampStart: 'timestamp_start',
    timestampEnd: 'timestamp_end',
    timestampStatusChange: 'timestamp_status_change'
  }
};

module.exports = { keys };